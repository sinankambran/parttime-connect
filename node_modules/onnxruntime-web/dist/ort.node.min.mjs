/*!
 * ONNX Runtime Web v1.22.0-dev.20250306-ccf8fdd9ea
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import{createRequire}from"module";const require=createRequire(import.meta.url);
var ue=Object.defineProperty;var pt=Object.getOwnPropertyDescriptor;var mt=Object.getOwnPropertyNames;var gt=Object.prototype.hasOwnProperty;var ce=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,o)=>(typeof require<"u"?require:t)[o]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var C=(e,t)=>()=>(e&&(t=e(e=0)),t);var bt=(e,t)=>{for(var o in t)ue(e,o,{get:t[o],enumerable:!0})},yt=(e,t,o,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of mt(t))!gt.call(e,r)&&r!==o&&ue(e,r,{get:()=>t[r],enumerable:!(s=pt(t,r))||s.enumerable});return e};var wt=e=>yt(ue({},"__esModule",{value:!0}),e);var B,Q=C(()=>{"use strict";B=!!(typeof process<"u"&&process.versions&&process.versions.node)});var Pe,ht,St,k,Ie,Le,Et,Ot,Tt,Lt,ve,xe,le=C(()=>{"use strict";Q();Pe=B||typeof location>"u"?void 0:location.origin,ht=import.meta.url>"file:"&&import.meta.url<"file;",St=()=>{if(!B){if(ht){let e=URL;return new URL(new e("ort.node.min.mjs",import.meta.url).href,Pe).href}return import.meta.url}},k=St(),Ie=()=>{if(k&&!k.startsWith("blob:"))return k.substring(0,k.lastIndexOf("/")+1)},Le=(e,t)=>{try{let o=t??k;return(o?new URL(e,o):new URL(e)).origin===Pe}catch{return!1}},Et=(e,t)=>{let o=t??k;try{return(o?new URL(e,o):new URL(e)).href}catch{return}},Ot=(e,t)=>`${t??"./"}${e}`,Tt=async e=>{let o=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(o)},Lt=async e=>(await import(/*webpackIgnore:true*/e)).default,ve=void 0,xe=async(e,t,o)=>{if(!e&&!t&&ve&&k&&Le(k))return[void 0,ve];{let s="ort-wasm-simd-threaded.mjs",r=e??Et(s,t),a=!B&&o&&r&&!Le(r,t),n=a?await Tt(r):r??Ot(s,t);return[a?n:void 0,await Lt(n)]}}});var fe,de,ee,Ae,vt,Pt,_e,E,z=C(()=>{"use strict";le();de=!1,ee=!1,Ae=!1,vt=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Pt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},_e=async e=>{if(de)return Promise.resolve();if(ee)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ae)throw new Error("previous call to 'initializeWebAssembly()' failed.");ee=!0;let t=e.initTimeout,o=e.numThreads;if(!Pt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let s=vt();o>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+o+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=o=1);let r=e.wasmPaths,a=typeof r=="string"?r:void 0,n=r?.mjs,i=n?.href??n,c=r?.wasm,f=c?.href??c,h=e.wasmBinary,[y,u]=await xe(i,a,o>1),l=!1,I=[];if(t>0&&I.push(new Promise(S=>{setTimeout(()=>{l=!0,S()},t)})),I.push(new Promise((S,m)=>{let b={numThreads:o};if(h)b.wasmBinary=h;else if(f||a)b.locateFile=d=>f??a+d;else if(i&&i.indexOf("blob:")!==0)b.locateFile=d=>new URL(d,i).href;else if(y){let d=Ie();d&&(b.locateFile=w=>d+w)}u(b).then(d=>{ee=!1,de=!0,fe=d,S(),y&&URL.revokeObjectURL(y)},d=>{ee=!1,Ae=!0,m(d)})})),await Promise.race(I),l)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},E=()=>{if(de&&fe)return fe;throw new Error("WebAssembly is not initialized yet.")}});var O,J,g,te=C(()=>{"use strict";z();O=(e,t)=>{let o=E(),s=o.lengthBytesUTF8(e)+1,r=o._malloc(s);return o.stringToUTF8(e,r,s),t.push(r),r},J=(e,t,o,s)=>{if(typeof e=="object"&&e!==null){if(o.has(e))throw new Error("Circular reference in options");o.add(e)}Object.entries(e).forEach(([r,a])=>{let n=t?t+r:r;if(typeof a=="object")J(a,n+".",o,s);else if(typeof a=="string"||typeof a=="number")s(n,a.toString());else if(typeof a=="boolean")s(n,a?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof a}`)})},g=e=>{let t=E(),o=t.stackSave();try{let s=t.PTR_SIZE,r=t.stackAlloc(2*s);t._OrtGetLastError(r,r+s);let a=Number(t.getValue(r,s===4?"i32":"i64")),n=t.getValue(r+s,"*"),i=n?t.UTF8ToString(n):"";throw new Error(`${e} ERROR_CODE: ${a}, ERROR_MESSAGE: ${i}`)}finally{t.stackRestore(o)}}});var Ce,Ue=C(()=>{"use strict";z();te();Ce=e=>{let t=E(),o=0,s=[],r=e||{};try{if(e?.logSeverityLevel===void 0)r.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)r.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(r.terminate=!1);let a=0;return e?.tag!==void 0&&(a=O(e.tag,s)),o=t._OrtCreateRunOptions(r.logSeverityLevel,r.logVerbosityLevel,!!r.terminate,a),o===0&&g("Can't create run options."),e?.extra!==void 0&&J(e.extra,"",new WeakSet,(n,i)=>{let c=O(n,s),f=O(i,s);t._OrtAddRunConfigEntry(o,c,f)!==0&&g(`Can't set a run config entry: ${n} - ${i}.`)}),[o,s]}catch(a){throw o!==0&&t._OrtReleaseRunOptions(o),s.forEach(n=>t._free(n)),a}}});var It,xt,At,_t,Me,Be=C(()=>{"use strict";z();te();It=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},xt=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},At=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(o=>(typeof o=="string"?o:o.name)==="webgpu")&&(e.enableMemPattern=!1)},_t=(e,t,o)=>{for(let s of t){let r=typeof s=="string"?s:s.name;switch(r){case"webnn":if(r="WEBNN",typeof s!="string"){let i=s?.deviceType;if(i){let c=O("deviceType",o),f=O(i,o);E()._OrtAddSessionConfigEntry(e,c,f)!==0&&g(`Can't set a session config entry: 'deviceType' - ${i}.`)}}break;case"webgpu":if(r="JS",typeof s!="string"){let n=s;if(n?.preferredLayout){if(n.preferredLayout!=="NCHW"&&n.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${n.preferredLayout}`);let i=O("preferredLayout",o),c=O(n.preferredLayout,o);E()._OrtAddSessionConfigEntry(e,i,c)!==0&&g(`Can't set a session config entry: 'preferredLayout' - ${n.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${r}`)}let a=O(r,o);E()._OrtAppendExecutionProvider(e,a)!==0&&g(`Can't append execution provider: ${r}.`)}},Me=e=>{let t=E(),o=0,s=[],r=e||{};At(r);try{let a=It(r.graphOptimizationLevel??"all"),n=xt(r.executionMode??"sequential"),i=typeof r.logId=="string"?O(r.logId,s):0,c=r.logSeverityLevel??2;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log serverity level is not valid: ${c}`);let f=r.logVerbosityLevel??0;if(!Number.isInteger(f)||f<0||f>4)throw new Error(`log verbosity level is not valid: ${f}`);let h=typeof r.optimizedModelFilePath=="string"?O(r.optimizedModelFilePath,s):0;if(o=t._OrtCreateSessionOptions(a,!!r.enableCpuMemArena,!!r.enableMemPattern,n,!!r.enableProfiling,0,i,c,f,h),o===0&&g("Can't create session options."),r.executionProviders&&_t(o,r.executionProviders,s),r.enableGraphCapture!==void 0){if(typeof r.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${r.enableGraphCapture}`);let y=O("enableGraphCapture",s),u=O(r.enableGraphCapture.toString(),s);t._OrtAddSessionConfigEntry(o,y,u)!==0&&g(`Can't set a session config entry: 'enableGraphCapture' - ${r.enableGraphCapture}.`)}if(r.freeDimensionOverrides)for(let[y,u]of Object.entries(r.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof u!="number"||!Number.isInteger(u)||u<0)throw new Error(`free dimension override value must be a non-negative integer: ${u}`);let l=O(y,s);t._OrtAddFreeDimensionOverride(o,l,u)!==0&&g(`Can't set a free dimension override: ${y} - ${u}.`)}return r.extra!==void 0&&J(r.extra,"",new WeakSet,(y,u)=>{let l=O(y,s),I=O(u,s);t._OrtAddSessionConfigEntry(o,l,I)!==0&&g(`Can't set a session config entry: ${y} - ${u}.`)}),[o,s]}catch(a){throw o!==0&&t._OrtReleaseSessionOptions(o)!==0&&g("Can't release session options."),s.forEach(n=>t._free(n)),a}}});var G,ke,H,De,Fe,re,ne,We,pe=C(()=>{"use strict";G=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},ke=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},H=(e,t)=>{let o=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof t=="number"?t:t.reduce((r,a)=>r*a,1);return o>0?Math.ceil(s*o):void 0},De=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Fe=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},re=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",ne=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",We=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}});var Y,me=C(()=>{"use strict";Q();Y=async e=>{if(typeof e=="string")if(B)try{let{readFile:t}=ce("node:fs/promises");return new Uint8Array(await t(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let{createReadStream:o}=ce("node:fs"),s=o(e),r=[];for await(let a of s)r.push(a);return new Uint8Array(Buffer.concat(r))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let o=t.headers.get("Content-Length"),s=o?parseInt(o,10):0;if(s<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let r=t.body.getReader(),a;try{a=new ArrayBuffer(s)}catch(i){if(i instanceof RangeError){let c=Math.ceil(s/65536);a=new WebAssembly.Memory({initial:c,maximum:c}).buffer}else throw i}let n=0;for(;;){let{done:i,value:c}=await r.read();if(i)break;let f=c.byteLength;new Uint8Array(a,n,f).set(c),n+=f}return new Uint8Array(a,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}});var Ct,Ne,je,V,Ut,ge,$e,ze,Re,Ge,He,Ve=C(()=>{"use strict";Ue();Be();pe();z();te();me();Ct=(e,t)=>{E()._OrtInit(e,t)!==0&&g("Can't initialize onnxruntime.")},Ne=async e=>{Ct(e.wasm.numThreads,Fe(e.logLevel))},je=async(e,t)=>{},V=new Map,Ut=e=>{let t=E(),o=t.stackSave();try{let s=t.PTR_SIZE,r=t.stackAlloc(2*s);t._OrtGetInputOutputCount(e,r,r+s)!==0&&g("Can't get session input/output count.");let n=s===4?"i32":"i64";return[Number(t.getValue(r,n)),Number(t.getValue(r+s,n))]}finally{t.stackRestore(o)}},ge=e=>{let t=E(),o=t._malloc(e.byteLength);if(o===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,o),[o,e.byteLength]},$e=async(e,t)=>{let o,s,r=E();Array.isArray(e)?[o,s]=e:e.buffer===r.HEAPU8.buffer?[o,s]=[e.byteOffset,e.byteLength]:[o,s]=ge(e);let a=0,n=0,i=0,c=[],f=[],h=[];try{if([n,c]=Me(t),t?.externalData&&r.mountExternalData){let d=[];for(let w of t.externalData){let L=typeof w=="string"?w:w.path;d.push(Y(typeof w=="string"?w:w.data).then(_=>{r.mountExternalData(L,_)}))}await Promise.all(d)}for(let d of t?.executionProviders??[])if((typeof d=="string"?d:d.name)==="webnn"){if(r.shouldTransferToMLTensor=!1,typeof d!="string"){let L=d,_=L?.context,D=L?.gpuDevice,F=L?.deviceType,X=L?.powerPreference;_?r.currentContext=_:D?r.currentContext=await r.jsepCreateMLContext(D):r.currentContext=await r.jsepCreateMLContext({deviceType:F,powerPreference:X})}else r.currentContext=await r.jsepCreateMLContext();break}a=await r._OrtCreateSession(o,s,n),a===0&&g("Can't create a session."),r.jsepOnCreateSession?.(),r.currentContext&&(r.jsepRegisterMLContext(a,r.currentContext),r.currentContext=void 0,r.shouldTransferToMLTensor=!0);let[y,u]=Ut(a),l=!!t?.enableGraphCapture,I=[],S=[],m=[];for(let d=0;d<y;d++){let w=r._OrtGetInputName(a,d);w===0&&g("Can't get an input name."),f.push(w),I.push(r.UTF8ToString(w))}for(let d=0;d<u;d++){let w=r._OrtGetOutputName(a,d);w===0&&g("Can't get an output name."),h.push(w);let L=r.UTF8ToString(w);S.push(L)}return V.set(a,[a,f,h,null,l,!1]),[a,I,S]}catch(y){throw f.forEach(u=>r._OrtFree(u)),h.forEach(u=>r._OrtFree(u)),i!==0&&r._OrtReleaseBinding(i)!==0&&g("Can't release IO binding."),a!==0&&r._OrtReleaseSession(a)!==0&&g("Can't release session."),y}finally{r._free(o),n!==0&&r._OrtReleaseSessionOptions(n)!==0&&g("Can't release session options."),c.forEach(y=>r._free(y)),r.unmountExternalData?.()}},ze=e=>{let t=E(),o=V.get(e);if(!o)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,r,a,n,i]=o;n&&(i&&t._OrtClearBoundOutputs(n.handle)!==0&&g("Can't clear bound outputs."),t._OrtReleaseBinding(n.handle)!==0&&g("Can't release IO binding.")),t.jsepOnReleaseSession?.(e),r.forEach(c=>t._OrtFree(c)),a.forEach(c=>t._OrtFree(c)),t._OrtReleaseSession(s)!==0&&g("Can't release session."),V.delete(e)},Re=async(e,t,o,s,r,a=!1)=>{if(!e){t.push(0);return}let n=E(),i=n.PTR_SIZE,c=e[0],f=e[1],h=e[3],y=h,u,l;if(c==="string"&&(h==="gpu-buffer"||h==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(a&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${r} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let m=e[2].gpuBuffer;l=H(G(c),f);let b=n.jsepRegisterBuffer;if(!b)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');u=b(s,r,m,l)}else if(h==="ml-tensor"){let m=e[2].mlTensor;l=H(G(c),f);let b=n.jsepRegisterMLTensor;if(!b)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');u=b(s,m,G(c),f)}else{let m=e[2];if(Array.isArray(m)){l=i*m.length,u=n._malloc(l),o.push(u);for(let b=0;b<m.length;b++){if(typeof m[b]!="string")throw new TypeError(`tensor data at index ${b} is not a string`);n.setValue(u+b*i,O(m[b],o),"*")}}else{let b=n.jsepIsGraphInput;if(c!=="string"&&b){let d=n._OrtGetInputName(s,r),w=n.UTF8ToString(d);if(b(s,w)){let L=G(c);l=H(L,f),y="ml-tensor";let _=n.jsepCreateTemporaryTensor,D=n.jsepUploadTensor;if(!_||!D)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let F=await _(s,L,f);D(F,new Uint8Array(m.buffer,m.byteOffset,m.byteLength)),u=F}else l=m.byteLength,u=n._malloc(l),o.push(u),n.HEAPU8.set(new Uint8Array(m.buffer,m.byteOffset,l),u)}else l=m.byteLength,u=n._malloc(l),o.push(u),n.HEAPU8.set(new Uint8Array(m.buffer,m.byteOffset,l),u)}}let I=n.stackSave(),S=n.stackAlloc(4*f.length);try{f.forEach((b,d)=>n.setValue(S+d*i,b,i===4?"i32":"i64"));let m=n._OrtCreateTensor(G(c),u,l,S,f.length,We(y));m===0&&g(`Can't create tensor for input/output. session=${s}, index=${r}.`),t.push(m)}finally{n.stackRestore(I)}},Ge=async(e,t,o,s,r,a)=>{let n=E(),i=n.PTR_SIZE,c=V.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let f=c[0],h=c[1],y=c[2],u=c[3],l=c[4],I=c[5],S=t.length,m=s.length,b=0,d=[],w=[],L=[],_=[],D=n.stackSave(),F=n.stackAlloc(S*i),X=n.stackAlloc(S*i),ae=n.stackAlloc(m*i),Se=n.stackAlloc(m*i);try{[b,d]=Ce(a);for(let p=0;p<S;p++)await Re(o[p],w,_,e,t[p],l);for(let p=0;p<m;p++)await Re(r[p],L,_,e,S+s[p],l);for(let p=0;p<S;p++)n.setValue(F+p*i,w[p],"*"),n.setValue(X+p*i,h[t[p]],"*");for(let p=0;p<m;p++)n.setValue(ae+p*i,L[p],"*"),n.setValue(Se+p*i,y[s[p]],"*");n.jsepOnRunStart?.(f);let U;U=await n._OrtRun(f,X,F,S,Se,m,ae,b),U!==0&&g("failed to call OrtRun().");let j=[];for(let p=0;p<m;p++){let $=Number(n.getValue(ae+p*i,"*"));if($===L[p]){j.push(r[p]);continue}let Ee=n.stackSave(),M=n.stackAlloc(4*i),q=!1,v,x=0;try{n._OrtGetTensorData($,M,M+i,M+2*i,M+3*i)!==0&&g(`Can't access output tensor data on index ${p}.`);let ie=i===4?"i32":"i64",Z=Number(n.getValue(M,ie));x=n.getValue(M+i,"*");let Oe=n.getValue(M+i*2,"*"),lt=Number(n.getValue(M+i*3,ie)),W=[];for(let P=0;P<lt;P++)W.push(Number(n.getValue(Oe+P*i,ie)));n._OrtFree(Oe)!==0&&g("Can't free memory for tensor dims.");let R=W.reduce((P,T)=>P*T,1);v=ke(Z);let K=u?.outputPreferredLocations[s[p]];if(v==="string"){if(K==="gpu-buffer"||K==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let P=[];for(let T=0;T<R;T++){let N=n.getValue(x+T*i,"*"),ft=n.getValue(x+(T+1)*i,"*"),dt=T===R-1?void 0:ft-N;P.push(n.UTF8ToString(N,dt))}j.push([v,W,P,"cpu"])}else if(K==="gpu-buffer"&&R>0){let P=n.jsepGetBuffer;if(!P)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let T=P(x),N=H(Z,R);if(N===void 0||!re(v))throw new Error(`Unsupported data type: ${v}`);q=!0,j.push([v,W,{gpuBuffer:T,download:n.jsepCreateDownloader(T,N,v),dispose:()=>{n._OrtReleaseTensor($)!==0&&g("Can't release tensor.")}},"gpu-buffer"])}else if(K==="ml-tensor"&&R>0){let P=n.jsepEnsureTensor;if(!P)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(H(Z,R)===void 0||!ne(v))throw new Error(`Unsupported data type: ${v}`);let N=await P(e,x,Z,W,!1);q=!0,j.push([v,W,{mlTensor:N,download:n.jsepCreateMLTensorDownloader(x,v),dispose:()=>{n.jsepReleaseTensorId(x),n._OrtReleaseTensor($)}},"ml-tensor"])}else{let P=De(v),T=new P(R);new Uint8Array(T.buffer,T.byteOffset,T.byteLength).set(n.HEAPU8.subarray(x,x+T.byteLength)),j.push([v,W,T,"cpu"])}}finally{n.stackRestore(Ee),v==="string"&&x&&n._free(x),q||n._OrtReleaseTensor($),n.jsepOnRunEnd?.(f)}}return u&&!l&&(n._OrtClearBoundOutputs(u.handle)!==0&&g("Can't clear bound outputs."),V.set(e,[f,h,y,u,l,!1])),j}finally{n.stackRestore(D),w.forEach(U=>n._OrtReleaseTensor(U)),L.forEach(U=>n._OrtReleaseTensor(U)),_.forEach(U=>n._free(U)),b!==0&&n._OrtReleaseRunOptions(b),d.forEach(U=>n._free(U))}},He=e=>{let t=E(),o=V.get(e);if(!o)throw new Error("invalid session id");let s=o[0],r=t._OrtEndProfiling(s);r===0&&g("Can't get an profile file name."),t._OrtFree(r)}});import{env as ye}from"onnxruntime-common";var be,qe,Je,Ye,Xe,Ze,Ke,Qe,et,tt,we=C(()=>{"use strict";Ve();z();le();be=!1,qe=!1,Je=!1,Ye=async()=>{if(!qe){if(be)throw new Error("multiple calls to 'initWasm()' detected.");if(Je)throw new Error("previous call to 'initWasm()' failed.");be=!0;try{await _e(ye.wasm),await Ne(ye),qe=!0}catch(e){throw Je=!0,e}finally{be=!1}}},Xe=async e=>{await je(ye,e)},Ze=async e=>ge(e),Ke=async(e,t)=>$e(e,t),Qe=async e=>{ze(e)},et=async(e,t,o,s,r,a)=>Ge(e,t,o,s,r,a),tt=async e=>{He(e)}});import{Tensor as he,TRACE_FUNC_BEGIN as rt,TRACE_FUNC_END as nt}from"onnxruntime-common";var ot,Bt,oe,st=C(()=>{"use strict";we();pe();Q();me();ot=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Bt=e=>{switch(e[3]){case"cpu":return new he(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!re(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:o,download:s,dispose:r}=e[2];return he.fromGpuBuffer(o,{dataType:t,dims:e[1],download:s,dispose:r})}case"ml-tensor":{let t=e[0];if(!ne(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:o,download:s,dispose:r}=e[2];return he.fromMLTensor(o,{dataType:t,dims:e[1],download:s,dispose:r})}default:throw new Error(`invalid data location: ${e[3]}`)}},oe=class{async fetchModelAndCopyToWasmMemory(t){return Ze(await Y(t))}async loadModel(t,o){rt();let s;typeof t=="string"?B?s=await Y(t):s=await this.fetchModelAndCopyToWasmMemory(t):s=t,[this.sessionId,this.inputNames,this.outputNames]=await Ke(s,o),nt()}async dispose(){return Qe(this.sessionId)}async run(t,o,s){rt();let r=[],a=[];Object.entries(t).forEach(u=>{let l=u[0],I=u[1],S=this.inputNames.indexOf(l);if(S===-1)throw new Error(`invalid input '${l}'`);r.push(I),a.push(S)});let n=[],i=[];Object.entries(o).forEach(u=>{let l=u[0],I=u[1],S=this.outputNames.indexOf(l);if(S===-1)throw new Error(`invalid output '${l}'`);n.push(I),i.push(S)});let c=r.map((u,l)=>ot(u,()=>`input "${this.inputNames[a[l]]}"`)),f=n.map((u,l)=>u?ot(u,()=>`output "${this.outputNames[i[l]]}"`):null),h=await et(this.sessionId,a,c,i,f,s),y={};for(let u=0;u<h.length;u++)y[this.outputNames[i[u]]]=n[u]??Bt(h[u]);return nt(),y}startProfiling(){}endProfiling(){tt(this.sessionId)}}});var it={};bt(it,{OnnxruntimeWebAssemblyBackend:()=>se,initializeFlags:()=>at,wasmBackend:()=>kt});import{env as A}from"onnxruntime-common";var at,se,kt,ut=C(()=>{"use strict";we();st();at=()=>{if((typeof A.wasm.initTimeout!="number"||A.wasm.initTimeout<0)&&(A.wasm.initTimeout=0),A.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof A.wasm.proxy!="boolean"&&(A.wasm.proxy=!1),typeof A.wasm.trace!="boolean"&&(A.wasm.trace=!1),typeof A.wasm.numThreads!="number"||!Number.isInteger(A.wasm.numThreads)||A.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)A.wasm.numThreads=1;else{let e=typeof navigator>"u"?ce("node:os").cpus().length:navigator.hardwareConcurrency;A.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},se=class{async init(t){at(),await Ye(),await Xe(t)}async createInferenceSessionHandler(t,o){let s=new oe;return await s.loadModel(t,o),Promise.resolve(s)}},kt=new se});export*from"onnxruntime-common";import*as Dt from"onnxruntime-common";import{registerBackend as ct,env as Ft}from"onnxruntime-common";var Te="1.22.0-dev.20250306-ccf8fdd9ea";var Mr=Dt;{let e=(ut(),wt(it)).wasmBackend;ct("cpu",e,10),ct("wasm",e,10)}Object.defineProperty(Ft.versions,"web",{value:Te,enumerable:!0});export{Mr as default};
//# sourceMappingURL=ort.node.min.mjs.map
